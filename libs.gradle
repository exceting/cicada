ext {
    versions = [
            'spring'           : '5.2.8.RELEASE',
            'servlet'          : '4.0.1',
            'okhttp'           : '3.14.9',
            'retrofit'         : '2.9.0',
            'resilience4j'     : '0.13.2',
            'guava'            : '31.1-jre',
            'caffeine'         : '2.8.5',
            'fastjson'         : '1.2.83',
            'slf4j'            : '1.7.30',
            'logback'          : '1.2.3',
            'springboot'       : '2.3.3.RELEASE',
            'xmemcached'       : '2.4.2',
            'kryo'             : '4.0.2',
            'kryo-serializers' : '0.42',
            'mybatis'          : '3.5.10',
            'mybatis-spring'   : '2.0.7',
            'mysql'            : '8.0.21',
            'protobuf'         : '3.11.0',
            'grpc'             : '1.29.0',
            'gradle-lombok'    : '5.0.0',
            'jedis'            : '2.9.0',
            'errorprone-gradle': '2.0.1',
            'javax-annotation' : '1.3.2',
            'hikari-cp'        : '3.4.5',
            'disruptor'        : '3.4.4',
            'retry'            : '2.0.0',
            'redisson'         : '3.17.6',
            'commons-lang3'    : '3.12.0',
    ]
    libs = [
            // For spring boot
            'springboot'                        : "org.springframework.boot:spring-boot:${versions['springboot']}",
            'springboot-gradle-plugin'          : "org.springframework.boot:spring-boot-gradle-plugin:${versions['springboot']}",
            'springboot-starter-web'            : "org.springframework.boot:spring-boot-starter-web:${versions['springboot']}",
            'springboot-starter-aop'            : "org.springframework.boot:spring-boot-starter-aop:${versions['springboot']}",
            'springboot-starter-mail'           : "org.springframework.boot:spring-boot-starter-mail:${versions['springboot']}",
            'springboot-autoconfigure'          : "org.springframework.boot:spring-boot-autoconfigure:${versions['springboot']}",
            'springboot-configuration-processor': "org.springframework.boot:spring-boot-configuration-processor:${versions['springboot']}",

            // For spring
            'spring-context-support'            : "org.springframework:spring-context-support:${versions['spring']}",
            'spring-context'                    : "org.springframework:spring-context:${versions['spring']}",
            'spring-aop'                        : "org.springframework:spring-aop:${versions['spring']}",

            // For cache
            'caffeine-guava'                    : "com.github.ben-manes.caffeine:caffeine:${versions['caffeine']}",
            'xmemcached'                        : "com.googlecode.xmemcached:xmemcached:${versions['xmemcached']}",
            'jedis'                             : "redis.clients:jedis:${versions['jedis']}",
            'redisson'                          : "org.redisson:redisson:${versions['redisson']}",

            // For DB
            'hikari-cp'                         : "com.zaxxer:HikariCP:${versions['hikari-cp']}",
            'mybatis'                           : "org.mybatis:mybatis:${versions['mybatis']}",
            'mybatis-spring'                    : "org.mybatis:mybatis-spring:${versions['mybatis-spring']}",
            'spring-jdbc'                       : "org.springframework:spring-jdbc:${versions['spring']}",
            'mysql'                             : "mysql:mysql-connector-java:${versions['mysql']}",

            // For serialization protocol
            'protoc'                            : "com.google.protobuf:protoc:${versions['protobuf']}",
            'protobuf'                          : "com.google.protobuf:protobuf-java:${versions['protobuf']}",
            'kryo'                              : "com.esotericsoftware:kryo:${versions['kryo']}",
            'kryo-serializers'                  : "de.javakaffee:kryo-serializers:${versions['kryo-serializers']}",
            'fastjson'                          : "com.alibaba:fastjson:${versions['fastjson']}",

            // For HTTP client or server
            'servlet-api'                       : "javax.servlet:javax.servlet-api:${versions['servlet']}",
            'spring-webmvc'                     : "org.springframework:spring-webmvc:${versions['spring']}",
            'okhttp'                            : "com.squareup.okhttp3:okhttp:${versions['okhttp']}",
            'okhttp-mockws'                     : "com.squareup.okhttp3:mockwebserver:${versions['okhttp']}",
            'okhttp-testing'                    : "com.squareup.okhttp3:okhttp-testing-support:${versions['okhttp']}",
            'retrofit'                          : "com.squareup.retrofit2:retrofit:${versions['retrofit']}",

            // For RPC
            'grpc-netty'                        : "io.grpc:grpc-netty:${versions['grpc']}",
            'grpc-protobuf'                     : "io.grpc:grpc-protobuf:${versions['grpc']}",
            'grpc-stub'                         : "io.grpc:grpc-stub:${versions['grpc']}",
            'grpc-gen'                          : "io.grpc:protoc-gen-grpc-java:${versions['grpc']}",
            'grpc-context'                      : "io.grpc:grpc-context:${versions['grpc']}",
            'grpc-api'                          : "io.grpc:grpc-api:${versions['grpc']}",
            'grpc-services'                     : "io.grpc:grpc-services:${versions['grpc']}",
            'grpc-testing'                      : "io.grpc:grpc-testing:${versions['grpc']}",

            // For log
            'slf4j'                             : "org.slf4j:slf4j-api:${versions['slf4j']}",
            'slf4j-simple'                      : "org.slf4j:slf4j-simple:${versions['slf4j']}",
            'log4j-over-slf4j'                  : "org.slf4j:log4j-over-slf4j:${versions['slf4j']}",
            'logback'                           : "ch.qos.logback:logback-classic:${versions['logback']}",

            // Others
            'resilience4j-breaker'              : "io.github.resilience4j:resilience4j-circuitbreaker:${versions['resilience4j']}",
            'guava'                             : "com.google.guava:guava:${versions['guava']}",
            'retry'                             : "com.github.rholder:guava-retrying:${versions['retry']}",
            'javax-annotation'                  : "javax.annotation:javax.annotation-api:${versions['javax-annotation']}",
            'disruptor'                         : "com.lmax:disruptor:${versions['disruptor']}",
            'commons-lang3'                     : "org.apache.commons:commons-lang3:${versions['commons-lang3']}",
            'gradle-lombok'                     : "io.franzbecker:gradle-lombok:${versions['gradle-lombok']}",
            'errorprone-gradle'                 : "net.ltgt.gradle:gradle-errorprone-plugin:${versions['errorprone-gradle']}",
    ]
}